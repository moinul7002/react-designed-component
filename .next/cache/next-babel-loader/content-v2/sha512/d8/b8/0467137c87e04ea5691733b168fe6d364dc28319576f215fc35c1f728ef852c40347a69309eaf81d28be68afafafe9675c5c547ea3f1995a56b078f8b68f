{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"J:\\\\react-search-designed-component\\\\src\\\\components\\\\Speakers\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from \"react\";\nimport SearchBar from \"../SearchBar\";\nimport SingleSpeaker from \"./singleSpeaker\";\nimport { REQUEST_STATUS } from \"../../reducers\"; //contexts\n\nimport { DataProvider, DataContext } from \"../../contexts/DataContext\";\n\nconst SpeakersComponent = ({\n  bgColor\n}) => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  const {\n    records: speakers,\n    status,\n    error,\n    put\n  } = useContext(DataContext);\n  const success = status === REQUEST_STATUS.SUCCESS;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  const isError = status === REQUEST_STATUS.ERROR;\n  const specialMessage = \"\";\n\n  const toggleButtonHandler = async speakerRecord => {\n    put(_objectSpread(_objectSpread({}, speakerRecord), {}, {\n      isFavorite: !speakerRecord.isFavorite\n    }));\n  };\n\n  const mapSpeakers = speakers.filter(record => {\n    const targetString = `${record.lastName} ${record.firstName}`.toLowerCase();\n    return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n  }).map(single => {\n    return /*#__PURE__*/_jsxDEV(SingleSpeaker, _objectSpread(_objectSpread({}, single), {}, {\n      toggleButton: () => toggleButtonHandler(single)\n    }), single.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: bgColor,\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), specialMessage && specialMessage.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-orange-100 border-l-8 border-orange-500 text-orange-700 p-4 text-2xl\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: \"Special Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: specialMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading error... Is the json-server up and running? (try \\\"npm run json-server\\\" at your terminal) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"ERROR: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: mapSpeakers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nconst Speakers = props => {\n  return /*#__PURE__*/_jsxDEV(DataProvider, {\n    children: /*#__PURE__*/_jsxDEV(SpeakersComponent, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["J:/react-search-designed-component/src/components/Speakers/index.js"],"names":["React","useState","useContext","SearchBar","SingleSpeaker","REQUEST_STATUS","DataProvider","DataContext","SpeakersComponent","bgColor","searchQuery","setSearchQuery","records","speakers","status","error","put","success","SUCCESS","isLoading","LOADING","isError","ERROR","specialMessage","toggleButtonHandler","speakerRecord","isFavorite","mapSpeakers","filter","record","targetString","lastName","firstName","toLowerCase","length","includes","map","single","id","message","Speakers","props"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport SingleSpeaker from \"./singleSpeaker\";\r\nimport { REQUEST_STATUS } from \"../../reducers\";\r\n\r\n//contexts\r\nimport { DataProvider, DataContext } from \"../../contexts/DataContext\";\r\n\r\nconst SpeakersComponent = ({ bgColor }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const { records: speakers, status, error, put } = useContext(DataContext);\r\n\r\n  const success = status === REQUEST_STATUS.SUCCESS;\r\n  const isLoading = status === REQUEST_STATUS.LOADING;\r\n  const isError = status === REQUEST_STATUS.ERROR;\r\n  const specialMessage = \"\";\r\n\r\n  const toggleButtonHandler = async (speakerRecord) => {\r\n    put({\r\n      ...speakerRecord,\r\n      isFavorite: !speakerRecord.isFavorite,\r\n    });\r\n  };\r\n\r\n  const mapSpeakers = speakers\r\n    .filter((record) => {\r\n      const targetString = `${record.lastName} ${record.firstName}`.toLowerCase();\r\n      return searchQuery.length === 0\r\n        ? true\r\n        : targetString.includes(searchQuery.toLowerCase());\r\n    })\r\n    .map((single) => {\r\n      return (\r\n        <SingleSpeaker\r\n          key={single.id}\r\n          {...single}\r\n          toggleButton={() => toggleButtonHandler(single)}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className={bgColor}>\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n\r\n      {specialMessage && specialMessage.length > 0 && (\r\n        <div\r\n          className=\"bg-orange-100 border-l-8 border-orange-500 text-orange-700 p-4 text-2xl\"\r\n          role=\"alert\"\r\n        >\r\n          <p className=\"font-bold\">Special Message</p>\r\n          <p>{specialMessage}</p>\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && <div>Loading...</div>}\r\n\r\n      {/* error handling */}\r\n      {isError && (\r\n        <div>\r\n          Loading error... Is the json-server up and running? (try \"npm run\r\n          json-server\" at your terminal) <br />\r\n          <b>ERROR: {error.message}</b>\r\n        </div>\r\n      )}\r\n\r\n      {success && (\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\r\n          {mapSpeakers}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Speakers = (props) => {\r\n  return (\r\n    <DataProvider>\r\n      <SpeakersComponent {...props}></SpeakersComponent>\r\n    </DataProvider>\r\n  );\r\n};\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}