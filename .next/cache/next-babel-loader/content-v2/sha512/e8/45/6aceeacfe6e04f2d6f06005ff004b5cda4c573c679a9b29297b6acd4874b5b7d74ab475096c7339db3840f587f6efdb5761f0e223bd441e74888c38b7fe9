{"ast":null,"code":"import _regeneratorRuntime from \"J:/react-search-designed-component/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"J:/react-search-designed-component/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport RequestReducer from \"../reducers\";\nimport axios from \"axios\";\nimport { GET_ALL_SUCCESS, GET_ALL_FAILURE, PUT_SUCCESS, PUT_FAILURE } from \"../actions\";\n\nvar useRequest = function useRequest(baseUrl, routeName) {\n  _s();\n\n  var _useReducer = useReducer(RequestReducer, {\n    records: [],\n    status: REQUEST_STATUS.LOADING,\n    error: null\n  }),\n      _useReducer$ = _useReducer[0],\n      records = _useReducer$.records,\n      status = _useReducer$.status,\n      error = _useReducer$.error,\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(baseUrl, \"/\").concat(routeName));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  records: response.data,\n                  type: GET_ALL_SUCCESS\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: GET_ALL_FAILURE,\n                  error: _context.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [baseUrl, routeName]);\n  var propsLocal = {\n    records: records,\n    status: status,\n    error: error,\n    put: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(record) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.put(\"\".concat(baseUrl, \"/\").concat(routeName, \"/\").concat(record.id), record);\n\n              case 3:\n                dispatch({\n                  type: PUT_SUCCESS,\n                  singleRecord: record\n                });\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: PUT_FAILURE,\n                  error: _context2.t0\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 6]]);\n      }));\n\n      function put(_x) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  };\n};\n\n_s(useRequest, \"to6ZE4cp0O5ABh6IXZAdwYu2Wx4=\");\n\nexport default useRequest;","map":{"version":3,"sources":["J:/react-search-designed-component/src/customHooks/useRequest.js"],"names":["React","useEffect","useReducer","RequestReducer","axios","GET_ALL_SUCCESS","GET_ALL_FAILURE","PUT_SUCCESS","PUT_FAILURE","useRequest","baseUrl","routeName","records","status","REQUEST_STATUS","LOADING","error","dispatch","fetchData","get","response","data","type","propsLocal","put","record","id","singleRecord"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,cAAP,MAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,YALP;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,SAAV,EAAwB;AAAA;;AAAA,oBACMT,UAAU,CAACC,cAAD,EAAiB;AACxES,IAAAA,OAAO,EAAE,EAD+D;AAExEC,IAAAA,MAAM,EAAEC,cAAc,CAACC,OAFiD;AAGxEC,IAAAA,KAAK,EAAE;AAHiE,GAAjB,CADhB;AAAA;AAAA,MAChCJ,OADgC,gBAChCA,OADgC;AAAA,MACvBC,MADuB,gBACvBA,MADuB;AAAA,MACfG,KADe,gBACfA,KADe;AAAA,MACNC,QADM;;AAOzChB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAESd,KAAK,CAACe,GAAN,WAAaT,OAAb,cAAwBC,SAAxB,EAFT;;AAAA;AAERS,gBAAAA,QAFQ;AAGdH,gBAAAA,QAAQ,CAAC;AACPL,kBAAAA,OAAO,EAAEQ,QAAQ,CAACC,IADX;AAEPC,kBAAAA,IAAI,EAAEjB;AAFC,iBAAD,CAAR;AAHc;AAAA;;AAAA;AAAA;AAAA;AAQdY,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAEhB,eADC;AAEPU,kBAAAA,KAAK;AAFE,iBAAD,CAAR;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATE,SAAS;AAAA;AAAA;AAAA,OAAf;;AAcAA,IAAAA,SAAS;AACV,GAhBQ,EAgBN,CAACR,OAAD,EAAUC,SAAV,CAhBM,CAAT;AAkBA,MAAMY,UAAU,GAAG;AACjBX,IAAAA,OAAO,EAAPA,OADiB;AAEjBC,IAAAA,MAAM,EAANA,MAFiB;AAGjBG,IAAAA,KAAK,EAALA,KAHiB;AAIjBQ,IAAAA,GAAG;AAAA,0EAAE,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEKrB,KAAK,CAACoB,GAAN,WAAad,OAAb,cAAwBC,SAAxB,cAAqCc,MAAM,CAACC,EAA5C,GAAkDD,MAAlD,CAFL;;AAAA;AAGDR,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAEf,WADC;AAEPoB,kBAAAA,YAAY,EAAEF;AAFP,iBAAD,CAAR;AAHC;AAAA;;AAAA;AAAA;AAAA;AAQDR,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAEd,WADC;AAEPQ,kBAAAA,KAAK;AAFE,iBAAD,CAAR;;AARC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJc,GAAnB;AAmBD,CA5CD;;GAAMP,U;;AA8CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\r\nimport RequestReducer from \"../reducers\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GET_ALL_SUCCESS,\r\n  GET_ALL_FAILURE,\r\n  PUT_SUCCESS,\r\n  PUT_FAILURE,\r\n} from \"../actions\";\r\n\r\nconst useRequest = (baseUrl, routeName) => {\r\n  const [{ records, status, error }, dispatch] = useReducer(RequestReducer, {\r\n    records: [],\r\n    status: REQUEST_STATUS.LOADING,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseUrl}/${routeName}`);\r\n        dispatch({\r\n          records: response.data,\r\n          type: GET_ALL_SUCCESS,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: GET_ALL_FAILURE,\r\n          error: e,\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [baseUrl, routeName]);\r\n\r\n  const propsLocal = {\r\n    records,\r\n    status,\r\n    error,\r\n    put: async (record) => {\r\n      try {\r\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\r\n        dispatch({\r\n          type: PUT_SUCCESS,\r\n          singleRecord: record,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: PUT_FAILURE,\r\n          error: e,\r\n        });\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default useRequest;\r\n"]},"metadata":{},"sourceType":"module"}