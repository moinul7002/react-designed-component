{"ast":null,"code":"import _toConsumableArray from \"J:/react-search-designed-component/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"J:/react-search-designed-component/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_ALL_SUCCESS, GET_ALL_FAILURE, PUT_SUCCESS, PUT_FAILURE } from \"../actions\";\nexport var REQUEST_STATUS = {\n  LOADING: \"loading\",\n  SUCCESS: \"success\",\n  ERROR: \"error\"\n};\n\nvar RequestReducer = function RequestReducer(state, action) {\n  switch (action.type) {\n    case GET_ALL_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: REQUEST_STATUS.SUCCESS,\n          records: action.records\n        });\n      }\n\n    case GET_ALL_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: REQUEST_STATUS.ERROR,\n          error: action.error\n        });\n      }\n\n    case PUT_SUCCESS:\n      {\n        var records = state.records;\n        var singleRecord = action.singleRecord;\n        var recordIndex = records.map(function (single) {\n          return single.id;\n        }).indexOf(singleRecord.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          records: [].concat(_toConsumableArray(records.slice(0, recordIndex)), [singleRecord], _toConsumableArray(records.slice(recordIndex + 1)))\n        });\n      }\n\n    case PUT_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: action.error\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = RequestReducer;\nexport default RequestReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestReducer\");","map":{"version":3,"sources":["J:/react-search-designed-component/src/reducers/index.js"],"names":["GET_ALL_SUCCESS","GET_ALL_FAILURE","PUT_SUCCESS","PUT_FAILURE","REQUEST_STATUS","LOADING","SUCCESS","ERROR","RequestReducer","state","action","type","status","records","error","singleRecord","recordIndex","map","single","id","indexOf","slice"],"mappings":";;;;;;;AAAA,SACEA,eADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,YALP;AAOA,OAAO,IAAMC,cAAc,GAAG;AAC5BC,EAAAA,OAAO,EAAE,SADmB;AAE5BC,EAAAA,OAAO,EAAE,SAFmB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAAvB;;AAMP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,eAAL;AAAsB;AACpB,+CACKS,KADL;AAEEG,UAAAA,MAAM,EAAER,cAAc,CAACE,OAFzB;AAGEO,UAAAA,OAAO,EAAEH,MAAM,CAACG;AAHlB;AAKD;;AACD,SAAKZ,eAAL;AAAsB;AACpB,+CACKQ,KADL;AAEEG,UAAAA,MAAM,EAAER,cAAc,CAACG,KAFzB;AAGEO,UAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHhB;AAKD;;AACD,SAAKZ,WAAL;AAAkB;AAAA,YACRW,OADQ,GACIJ,KADJ,CACRI,OADQ;AAAA,YAERE,YAFQ,GAESL,MAFT,CAERK,YAFQ;AAGhB,YAAMC,WAAW,GAAGH,OAAO,CACxBI,GADiB,CACb,UAACC,MAAD;AAAA,iBAAYA,MAAM,CAACC,EAAnB;AAAA,SADa,EAEjBC,OAFiB,CAETL,YAAY,CAACI,EAFJ,CAApB;AAGA,+CACKV,KADL;AAEEI,UAAAA,OAAO,+BACFA,OAAO,CAACQ,KAAR,CAAc,CAAd,EAAiBL,WAAjB,CADE,IAELD,YAFK,sBAGFF,OAAO,CAACQ,KAAR,CAAcL,WAAW,GAAG,CAA5B,CAHE;AAFT;AAQD;;AACD,SAAKb,WAAL;AAAkB;AAChB,+CACKM,KADL;AAEEK,UAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFhB;AAID;;AACD;AACE,aAAOL,KAAP;AArCJ;AAuCD,CAxCD;;KAAMD,c;AA0CN,eAAeA,cAAf","sourcesContent":["import {\r\n  GET_ALL_SUCCESS,\r\n  GET_ALL_FAILURE,\r\n  PUT_SUCCESS,\r\n  PUT_FAILURE,\r\n} from \"../actions\";\r\n\r\nexport const REQUEST_STATUS = {\r\n  LOADING: \"loading\",\r\n  SUCCESS: \"success\",\r\n  ERROR: \"error\",\r\n};\r\n\r\nconst RequestReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        status: REQUEST_STATUS.SUCCESS,\r\n        records: action.records,\r\n      };\r\n    }\r\n    case GET_ALL_FAILURE: {\r\n      return {\r\n        ...state,\r\n        status: REQUEST_STATUS.ERROR,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case PUT_SUCCESS: {\r\n      const { records } = state;\r\n      const { singleRecord } = action;\r\n      const recordIndex = records\r\n        .map((single) => single.id)\r\n        .indexOf(singleRecord.id);\r\n      return {\r\n        ...state,\r\n        records: [\r\n          ...records.slice(0, recordIndex),\r\n          singleRecord,\r\n          ...records.slice(recordIndex + 1),\r\n        ],\r\n      };\r\n    }\r\n    case PUT_FAILURE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default RequestReducer;\r\n"]},"metadata":{},"sourceType":"module"}