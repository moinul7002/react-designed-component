{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"J:\\\\react-search-designed-component\\\\src\\\\HOCs\\\\withRequest.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport RequestReducer, { REQUEST_STATUS } from \"../reducers\";\nimport { GET_ALL_SUCCESS, GET_ALL_FAILURE, PUT_SUCCESS, PUT_FAILURE } from \"../actions\";\n\nconst withRequest = (baseUrl, routeName) => Component => props => {\n  const {\n    0: {\n      records,\n      status,\n      error\n    },\n    1: dispatch\n  } = useReducer(RequestReducer, {\n    records: [],\n    status: REQUEST_STATUS.LOADING,\n    error: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${baseUrl}/${routeName}`);\n        dispatch({\n          records: response.data,\n          type: GET_ALL_SUCCESS\n        });\n      } catch (e) {\n        dispatch({\n          type: GET_ALL_FAILURE,\n          error: e\n        });\n      }\n    };\n\n    fetchData();\n  }, [baseUrl, routeName]);\n  const propsLocal = {\n    records,\n    status,\n    error,\n    put: async record => {\n      try {\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n        dispatch({\n          type: PUT_SUCCESS,\n          singleRecord: record\n        });\n      } catch (e) {\n        dispatch({\n          type: PUT_FAILURE,\n          error: e\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, props), propsLocal), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\nexport default withRequest;","map":{"version":3,"sources":["J:/react-search-designed-component/src/HOCs/withRequest.js"],"names":["React","useEffect","useReducer","axios","RequestReducer","REQUEST_STATUS","GET_ALL_SUCCESS","GET_ALL_FAILURE","PUT_SUCCESS","PUT_FAILURE","withRequest","baseUrl","routeName","Component","props","records","status","error","dispatch","LOADING","fetchData","response","get","data","type","e","propsLocal","put","record","id","singleRecord"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,IAAyBC,cAAzB,QAA+C,aAA/C;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,YALP;;AAOA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAyBC,SAAD,IAAgBC,KAAD,IAAW;AACpE,QAAM;AAAA,OAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA;AAAnB,KAAD;AAAA,OAA6BC;AAA7B,MAAyChB,UAAU,CAACE,cAAD,EAAiB;AACxEW,IAAAA,OAAO,EAAE,EAD+D;AAExEC,IAAAA,MAAM,EAAEX,cAAc,CAACc,OAFiD;AAGxEF,IAAAA,KAAK,EAAE;AAHiE,GAAjB,CAAzD;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,GAAEX,OAAQ,IAAGC,SAAU,EAAlC,CAAvB;AACAM,QAAAA,QAAQ,CAAC;AACPH,UAAAA,OAAO,EAAEM,QAAQ,CAACE,IADX;AAEPC,UAAAA,IAAI,EAAElB;AAFC,SAAD,CAAR;AAID,OAND,CAME,OAAOmB,CAAP,EAAU;AACVP,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAEjB,eADC;AAEPU,UAAAA,KAAK,EAAEQ;AAFA,SAAD,CAAR;AAID;AACF,KAbD;;AAcAL,IAAAA,SAAS;AACV,GAhBQ,EAgBN,CAACT,OAAD,EAAUC,SAAV,CAhBM,CAAT;AAkBA,QAAMc,UAAU,GAAG;AACjBX,IAAAA,OADiB;AAEjBC,IAAAA,MAFiB;AAGjBC,IAAAA,KAHiB;AAIjBU,IAAAA,GAAG,EAAE,MAAOC,MAAP,IAAkB;AACrB,UAAI;AACF,cAAMzB,KAAK,CAACwB,GAAN,CAAW,GAAEhB,OAAQ,IAAGC,SAAU,IAAGgB,MAAM,CAACC,EAAG,EAA/C,EAAkDD,MAAlD,CAAN;AACAV,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAEhB,WADC;AAEPsB,UAAAA,YAAY,EAAEF;AAFP,SAAD,CAAR;AAID,OAND,CAME,OAAOH,CAAP,EAAU;AACVP,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAEf,WADC;AAEPQ,UAAAA,KAAK,EAAEQ;AAFA,SAAD,CAAR;AAID;AACF;AAjBgB,GAAnB;AAmBA,sBAAO,QAAC,SAAD,kCAAeX,KAAf,GAA0BY,UAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7CD;;AA+CA,eAAehB,WAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport RequestReducer, { REQUEST_STATUS } from \"../reducers\";\r\nimport {\r\n  GET_ALL_SUCCESS,\r\n  GET_ALL_FAILURE,\r\n  PUT_SUCCESS,\r\n  PUT_FAILURE,\r\n} from \"../actions\";\r\n\r\nconst withRequest = (baseUrl, routeName) => (Component) => (props) => {\r\n  const [{ records, status, error }, dispatch] = useReducer(RequestReducer, {\r\n    records: [],\r\n    status: REQUEST_STATUS.LOADING,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseUrl}/${routeName}`);\r\n        dispatch({\r\n          records: response.data,\r\n          type: GET_ALL_SUCCESS,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: GET_ALL_FAILURE,\r\n          error: e,\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [baseUrl, routeName]);\r\n\r\n  const propsLocal = {\r\n    records,\r\n    status,\r\n    error,\r\n    put: async (record) => {\r\n      try {\r\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\r\n        dispatch({\r\n          type: PUT_SUCCESS,\r\n          singleRecord: record,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: PUT_FAILURE,\r\n          error: e,\r\n        });\r\n      }\r\n    },\r\n  };\r\n  return <Component {...props} {...propsLocal}></Component>;\r\n};\r\n\r\nexport default withRequest;\r\n"]},"metadata":{},"sourceType":"module"}