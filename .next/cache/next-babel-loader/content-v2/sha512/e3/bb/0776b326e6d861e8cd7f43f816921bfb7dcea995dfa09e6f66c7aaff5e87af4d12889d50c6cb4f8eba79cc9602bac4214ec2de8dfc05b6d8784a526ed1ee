{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"J:/react-search-designed-component/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"J:\\\\react-search-designed-component\\\\src\\\\components\\\\Speakers\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport SearchBar from \"../SearchBar\";\nimport speakersData from \"./data.js\";\nimport SingleSpeaker from \"./singleSpeaker\";\n\nvar Speakers = function Speakers() {\n  _s();\n\n  var _useState = useState(\"\"),\n      searchQuery = _useState[0],\n      setSearchQuery = _useState[1];\n\n  var _useState2 = useState(speakersData),\n      speakers = _useState2[0],\n      setSpeakers = _useState2[1];\n\n  var mapSpeakers = speakersData.filter(function (rec) {\n    var targetString = \"\".concat(rec.lastName, \" \").concat(rec.firstName).toLowerCase();\n    return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n  }).map(function (single) {\n    return /*#__PURE__*/_jsxDEV(SingleSpeaker, _objectSpread(_objectSpread({}, single), {}, {\n      toggleButton: function toggleButton() {\n        return toggleButtonHandler(single);\n      }\n    }), single.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, _this);\n  });\n\n  var toggleFavoriteStatus = function toggleFavoriteStatus(speakerRecord) {\n    return _objectSpread(_objectSpread({}, speakerRecord), {}, {\n      isFavorite: !speakerRecord.isFavorite\n    });\n  };\n\n  var toggleButtonHandler = function toggleButtonHandler(speakerRec) {\n    var toggledSpeakerRecord = toggleFavoriteStatus(speakerRecord);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: mapSpeakers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Speakers, \"QW0wZOd0Lb0nj0kfR+I66zDmi6k=\");\n\n_c = Speakers;\nexport default Speakers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Speakers\");","map":{"version":3,"sources":["J:/react-search-designed-component/src/components/Speakers/index.js"],"names":["React","useState","SearchBar","speakersData","SingleSpeaker","Speakers","searchQuery","setSearchQuery","speakers","setSpeakers","mapSpeakers","filter","rec","targetString","lastName","firstName","toLowerCase","length","includes","map","single","toggleButtonHandler","id","toggleFavoriteStatus","speakerRecord","isFavorite","speakerRec","toggledSpeakerRecord"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACiBJ,QAAQ,CAAC,EAAD,CADzB;AAAA,MACdK,WADc;AAAA,MACDC,cADC;;AAAA,mBAEWN,QAAQ,CAACE,YAAD,CAFnB;AAAA,MAEdK,QAFc;AAAA,MAEJC,WAFI;;AAIrB,MAAMC,WAAW,GAAGP,YAAY,CAC7BQ,MADiB,CACV,UAACC,GAAD,EAAS;AACf,QAAMC,YAAY,GAAG,UAAGD,GAAG,CAACE,QAAP,cAAmBF,GAAG,CAACG,SAAvB,EAAmCC,WAAnC,EAArB;AACA,WAAOV,WAAW,CAACW,MAAZ,KAAuB,CAAvB,GACH,IADG,GAEHJ,YAAY,CAACK,QAAb,CAAsBZ,WAAW,CAACU,WAAZ,EAAtB,CAFJ;AAGD,GANiB,EAOjBG,GAPiB,CAOb,UAACC,MAAD,EAAY;AACf,wBACE,QAAC,aAAD,kCAEMA,MAFN;AAGE,MAAA,YAAY,EAAE;AAAA,eAAMC,mBAAmB,CAACD,MAAD,CAAzB;AAAA;AAHhB,QACOA,MAAM,CAACE,EADd;AAAA;AAAA;AAAA;AAAA,aADF;AAOD,GAfiB,CAApB;;AAiBA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,aAAD,EAAmB;AAC9C,2CACKA,aADL;AAEEC,MAAAA,UAAU,EAAE,CAACD,aAAa,CAACC;AAF7B;AAID,GALD;;AAMA,MAAMJ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACK,UAAD,EAAgB;AAC1C,QAAMC,oBAAoB,GAAGJ,oBAAoB,CAACC,aAAD,CAAjD;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAElB,WAAxB;AAAqC,MAAA,cAAc,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAQD,CAvCD;;GAAML,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport speakersData from \"./data.js\";\r\nimport SingleSpeaker from \"./singleSpeaker\";\r\n\r\nconst Speakers = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [speakers, setSpeakers] = useState(speakersData);\r\n\r\n  const mapSpeakers = speakersData\r\n    .filter((rec) => {\r\n      const targetString = `${rec.lastName} ${rec.firstName}`.toLowerCase();\r\n      return searchQuery.length === 0\r\n        ? true\r\n        : targetString.includes(searchQuery.toLowerCase());\r\n    })\r\n    .map((single) => {\r\n      return (\r\n        <SingleSpeaker\r\n          key={single.id}\r\n          {...single}\r\n          toggleButton={() => toggleButtonHandler(single)}\r\n        />\r\n      );\r\n    });\r\n\r\n  const toggleFavoriteStatus = (speakerRecord) => {\r\n    return {\r\n      ...speakerRecord,\r\n      isFavorite: !speakerRecord.isFavorite,\r\n    };\r\n  };\r\n  const toggleButtonHandler = (speakerRec) => {\r\n    const toggledSpeakerRecord = toggleFavoriteStatus(speakerRecord);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\r\n        {mapSpeakers}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}