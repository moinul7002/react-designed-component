{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_ALL_SUCCESS, GET_ALL_FAILURE, PUT_SUCESS, PUT_FAILURE } from \"../../actions\";\nexport const REQUEST_STATUS = {\n  LOADING: \"loading\",\n  SUCCESS: \"success\",\n  ERROR: \"error\"\n};\n\nconst requestReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_ALL_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: REQUEST_STATUS.SUCCESS,\n        speakers: action.speakers\n      });\n\n    case \"UPDATE_STATUS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: action.status\n      });\n  }\n};","map":{"version":3,"sources":["J:/react-search-designed-component/src/reducers/index.js"],"names":["GET_ALL_SUCCESS","GET_ALL_FAILURE","PUT_SUCESS","PUT_FAILURE","REQUEST_STATUS","LOADING","SUCCESS","ERROR","requestReducer","state","action","type","status","speakers"],"mappings":";;;;;;AAAA,SACEA,eADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,WAJF,QAKO,eALP;AAOA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,OAAO,EAAE,SADmB;AAE5BC,EAAAA,OAAO,EAAE,SAFmB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAAvB;;AAMP,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,6CACKF,KADL;AAEEG,QAAAA,MAAM,EAAER,cAAc,CAACE,OAFzB;AAGEO,QAAAA,QAAQ,EAAEH,MAAM,CAACG;AAHnB;;AAKF,SAAK,eAAL;AACE,6CACKJ,KADL;AAEEG,QAAAA,MAAM,EAAEF,MAAM,CAACE;AAFjB;AARJ;AAaD,CAdD","sourcesContent":["import {\r\n  GET_ALL_SUCCESS,\r\n  GET_ALL_FAILURE,\r\n  PUT_SUCESS,\r\n  PUT_FAILURE,\r\n} from \"../../actions\";\r\n\r\nexport const REQUEST_STATUS = {\r\n  LOADING: \"loading\",\r\n  SUCCESS: \"success\",\r\n  ERROR: \"error\",\r\n};\r\n\r\nconst requestReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"GET_ALL_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        status: REQUEST_STATUS.SUCCESS,\r\n        speakers: action.speakers,\r\n      };\r\n    case \"UPDATE_STATUS\":\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}