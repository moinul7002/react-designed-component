{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"J:\\\\react-search-designed-component\\\\src\\\\components\\\\Speakers\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport SearchBar from \"../SearchBar\";\nimport speakers from \"./data.js\";\nimport SingleSpeaker from \"./singleSpeaker\";\n\nconst Speakers = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const mapSpeakers = speakers.filter(rec => {\n    const targetString = `${rec.lastName} ${rec.firstName}`.toLowerCase();\n    return searchQuery === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n  }).map(single => {\n    return /*#__PURE__*/_jsxDEV(SingleSpeaker, _objectSpread({}, single), single.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: mapSpeakers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["J:/react-search-designed-component/src/components/Speakers/index.js"],"names":["React","SearchBar","speakers","SingleSpeaker","Speakers","searchQuery","setSearchQuery","useState","mapSpeakers","filter","rec","targetString","lastName","firstName","toLowerCase","includes","map","single","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMC,WAAW,GAAGN,QAAQ,CACzBO,MADiB,CACTC,GAAD,IAAS;AACf,UAAMC,YAAY,GAAI,GAAED,GAAG,CAACE,QAAS,IAAGF,GAAG,CAACG,SAAU,EAAjC,CAAmCC,WAAnC,EAArB;AACA,WAAOT,WAAW,KAAK,CAAhB,GACH,IADG,GAEHM,YAAY,CAACI,QAAb,CAAsBV,WAAW,CAACS,WAAZ,EAAtB,CAFJ;AAGD,GANiB,EAOjBE,GAPiB,CAOZC,MAAD,IAAY;AACf,wBAAO,QAAC,aAAD,oBAAmCA,MAAnC,GAAoBA,MAAM,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GATiB,CAApB;AAUA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEb,WAAxB;AAAqC,MAAA,cAAc,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,gBACGE;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CArBD;;AAsBA,eAAeJ,QAAf","sourcesContent":["import React from \"react\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport speakers from \"./data.js\";\r\nimport SingleSpeaker from \"./singleSpeaker\";\r\n\r\nconst Speakers = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const mapSpeakers = speakers\r\n    .filter((rec) => {\r\n      const targetString = `${rec.lastName} ${rec.firstName}`.toLowerCase();\r\n      return searchQuery === 0\r\n        ? true\r\n        : targetString.includes(searchQuery.toLowerCase());\r\n    })\r\n    .map((single) => {\r\n      return <SingleSpeaker key={single.id} {...single} />;\r\n    });\r\n  return (\r\n    <div>\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\r\n        {mapSpeakers}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}