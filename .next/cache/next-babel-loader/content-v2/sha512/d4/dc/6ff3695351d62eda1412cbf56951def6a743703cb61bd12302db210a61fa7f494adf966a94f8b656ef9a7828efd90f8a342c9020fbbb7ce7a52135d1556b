{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"J:\\\\react-search-designed-component\\\\src\\\\components\\\\Speakers\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport SearchBar from \"../SearchBar\"; // import speakersData from \"./data.js\";\n\nimport SingleSpeaker from \"./singleSpeaker\";\nimport axios from \"axios\";\nimport { GET_ALL_SUCCESS, GET_ALL_FAILURE, PUT_SUCESS, PUT_FAILURE } from \"../../actions\";\nimport RequestReducer, { REQUEST_STATUS } from \"../../reducers\";\n\nconst Speakers = () => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  const {\n    0: {\n      records: speakers,\n      status,\n      error\n    },\n    1: dispatch\n  } = useReducer(RequestReducer, {\n    records: [],\n    status: REQUEST_STATUS.LOADING,\n    error: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/speakers\");\n        dispatch({\n          records: response.data,\n          type: GET_ALL_SUCCESS\n        });\n      } catch (e) {\n        dispatch({\n          type: GET_ALL_FAILURE,\n          error: e\n        });\n      }\n    };\n\n    fetchData();\n  }, []);\n  const success = status === REQUEST_STATUS.SUCCESS;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  const isError = status === REQUEST_STATUS.ERROR;\n  const mapSpeakers = speakers.filter(record => {\n    const targetString = `${record.lastName} ${record.firstName}`.toLowerCase();\n    return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n  }).map(single => {\n    return /*#__PURE__*/_jsxDEV(SingleSpeaker, _objectSpread(_objectSpread({}, single), {}, {\n      toggleButton: () => toggleButtonHandler(single)\n    }), single.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this);\n  });\n\n  const toggleFavoriteStatus = speakerRecord => {\n    return _objectSpread(_objectSpread({}, speakerRecord), {}, {\n      isFavorite: !speakerRecord.isFavorite\n    });\n  };\n\n  const toggleButtonHandler = async speakerRecord => {\n    const toggledSpeakerRecord = toggleFavoriteStatus(speakerRecord);\n    const speakerIndex = speakers.map(single => single.id).indexOf(speakerRecord.id);\n\n    try {\n      await axios.put(`http://localhost:4000/speakers/${speakerRecord.id}`, toggledSpeakerRecord);\n      setSpeakers([...speakers.slice(0, speakerIndex), toggledSpeakerRecord, ...speakers.slice(speakerIndex + 1)]);\n    } catch (e) {\n      dispatch({\n        status: REQUEST_STATUS.ERROR,\n        type: \"UPDATE_STATUS\"\n      });\n      setError(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading error... Is the json-server up and running? (try \\\"npm run json-server\\\" at your terminal) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"ERROR: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: mapSpeakers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["J:/react-search-designed-component/src/components/Speakers/index.js"],"names":["React","useState","useEffect","useReducer","SearchBar","SingleSpeaker","axios","GET_ALL_SUCCESS","GET_ALL_FAILURE","PUT_SUCESS","PUT_FAILURE","RequestReducer","REQUEST_STATUS","Speakers","searchQuery","setSearchQuery","records","speakers","status","error","dispatch","LOADING","fetchData","response","get","data","type","e","success","SUCCESS","isLoading","isError","ERROR","mapSpeakers","filter","record","targetString","lastName","firstName","toLowerCase","length","includes","map","single","toggleButtonHandler","id","toggleFavoriteStatus","speakerRecord","isFavorite","toggledSpeakerRecord","speakerIndex","indexOf","put","setSpeakers","slice","setError","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\r\nimport SearchBar from \"../SearchBar\";\r\n// import speakersData from \"./data.js\";\r\nimport SingleSpeaker from \"./singleSpeaker\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GET_ALL_SUCCESS,\r\n  GET_ALL_FAILURE,\r\n  PUT_SUCESS,\r\n  PUT_FAILURE,\r\n} from \"../../actions\";\r\nimport RequestReducer, { REQUEST_STATUS } from \"../../reducers\";\r\n\r\nconst Speakers = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const [{ records: speakers, status, error }, dispatch] = useReducer(\r\n    RequestReducer,\r\n    {\r\n      records: [],\r\n      status: REQUEST_STATUS.LOADING,\r\n      error: null,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:4000/speakers\");\r\n        dispatch({\r\n          records: response.data,\r\n          type: GET_ALL_SUCCESS,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: GET_ALL_FAILURE,\r\n          error: e,\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const success = status === REQUEST_STATUS.SUCCESS;\r\n  const isLoading = status === REQUEST_STATUS.LOADING;\r\n  const isError = status === REQUEST_STATUS.ERROR;\r\n\r\n  const mapSpeakers = speakers\r\n    .filter((record) => {\r\n      const targetString = `${record.lastName} ${record.firstName}`.toLowerCase();\r\n      return searchQuery.length === 0\r\n        ? true\r\n        : targetString.includes(searchQuery.toLowerCase());\r\n    })\r\n    .map((single) => {\r\n      return (\r\n        <SingleSpeaker\r\n          key={single.id}\r\n          {...single}\r\n          toggleButton={() => toggleButtonHandler(single)}\r\n        />\r\n      );\r\n    });\r\n\r\n  const toggleFavoriteStatus = (speakerRecord) => {\r\n    return {\r\n      ...speakerRecord,\r\n      isFavorite: !speakerRecord.isFavorite,\r\n    };\r\n  };\r\n\r\n  const toggleButtonHandler = async (speakerRecord) => {\r\n    const toggledSpeakerRecord = toggleFavoriteStatus(speakerRecord);\r\n    const speakerIndex = speakers\r\n      .map((single) => single.id)\r\n      .indexOf(speakerRecord.id);\r\n\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:4000/speakers/${speakerRecord.id}`,\r\n        toggledSpeakerRecord\r\n      );\r\n      setSpeakers([\r\n        ...speakers.slice(0, speakerIndex),\r\n        toggledSpeakerRecord,\r\n        ...speakers.slice(speakerIndex + 1),\r\n      ]);\r\n    } catch (e) {\r\n      dispatch({\r\n        status: REQUEST_STATUS.ERROR,\r\n        type: \"UPDATE_STATUS\",\r\n      });\r\n      setError(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      {isLoading && <div>Loading...</div>}\r\n      {/* error handling */}\r\n      {isError && (\r\n        <div>\r\n          Loading error... Is the json-server up and running? (try \"npm run\r\n          json-server\" at your terminal) <br />\r\n          <b>ERROR: {error.message}</b>\r\n        </div>\r\n      )}\r\n      {success && (\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\r\n          {mapSpeakers}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}