{"ast":null,"code":"import React, { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport requestReducer, { REQUEST_STATUS } from \"../reducers\";\nimport { PUT_SUCCESS, PUT_FAILURE, GET_ALL_SUCCESS, GET_ALL_FAILURE } from \"../actions\";\n\nconst Request = ({\n  baseUrl,\n  routeName,\n  children\n}) => {\n  const {\n    0: {\n      records,\n      status,\n      error\n    },\n    1: dispatch\n  } = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${baseUrl}/${routeName}`);\n        dispatch({\n          type: GET_ALL_SUCCESS,\n          records: response.data\n        });\n      } catch (e) {\n        console.log(\"Loading data error\", e);\n        dispatch({\n          type: GET_ALL_FAILURE,\n          error: e\n        });\n      }\n    };\n\n    fetchData();\n  }, [baseUrl, routeName]);\n  const childProps = {\n    records,\n    status,\n    error,\n    put: async record => {\n      dispatch({\n        type: \"PUT\"\n      });\n\n      try {\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n        dispatch({\n          type: PUT_SUCCESS,\n          record\n        });\n      } catch (e) {\n        dispatch({\n          type: PUT_FAILURE,\n          error: e\n        });\n      }\n    }\n  };\n  return children(childProps);\n};\n\nexport default Request;","map":{"version":3,"sources":["J:/react-search-designed-component/src/RPs/request.js"],"names":["React","useEffect","useReducer","axios","requestReducer","REQUEST_STATUS","PUT_SUCCESS","PUT_FAILURE","GET_ALL_SUCCESS","GET_ALL_FAILURE","Request","baseUrl","routeName","children","records","status","error","dispatch","LOADING","fetchData","response","get","type","data","e","console","log","childProps","put","record","id"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,IAAyBC,cAAzB,QAA+C,aAA/C;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,YALP;;AAOA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACpD,QAAM;AAAA,OAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA;AAAnB,KAAD;AAAA,OAA6BC;AAA7B,MAAyCf,UAAU,CAACE,cAAD,EAAiB;AACxEW,IAAAA,MAAM,EAAEV,cAAc,CAACa,OADiD;AAExEJ,IAAAA,OAAO,EAAE,EAF+D;AAGxEE,IAAAA,KAAK,EAAE;AAHiE,GAAjB,CAAzD;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEV,OAAQ,IAAGC,SAAU,EAAlC,CAAvB;AACAK,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEd,eADC;AAEPM,UAAAA,OAAO,EAAEM,QAAQ,CAACG;AAFX,SAAD,CAAR;AAID,OAND,CAME,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,CAAlC;AACAP,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEb,eADC;AAEPO,UAAAA,KAAK,EAAEQ;AAFA,SAAD,CAAR;AAID;AACF,KAdD;;AAeAL,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAACR,OAAD,EAAUC,SAAV,CAjBM,CAAT;AAmBA,QAAMe,UAAU,GAAG;AACjBb,IAAAA,OADiB;AAEjBC,IAAAA,MAFiB;AAGjBC,IAAAA,KAHiB;AAIjBY,IAAAA,GAAG,EAAE,MAAOC,MAAP,IAAkB;AACrBZ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;;AAGA,UAAI;AACF,cAAMnB,KAAK,CAACyB,GAAN,CAAW,GAAEjB,OAAQ,IAAGC,SAAU,IAAGiB,MAAM,CAACC,EAAG,EAA/C,EAAkDD,MAAlD,CAAN;AACAZ,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEhB,WADC;AAEPuB,UAAAA;AAFO,SAAD,CAAR;AAID,OAND,CAME,OAAOL,CAAP,EAAU;AACVP,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEf,WADC;AAEPS,UAAAA,KAAK,EAAEQ;AAFA,SAAD,CAAR;AAID;AACF;AApBgB,GAAnB;AAuBA,SAAOX,QAAQ,CAACc,UAAD,CAAf;AACD,CAlDD;;AAoDA,eAAejB,OAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport requestReducer, { REQUEST_STATUS } from \"../reducers\";\r\nimport {\r\n  PUT_SUCCESS,\r\n  PUT_FAILURE,\r\n  GET_ALL_SUCCESS,\r\n  GET_ALL_FAILURE,\r\n} from \"../actions\";\r\n\r\nconst Request = ({ baseUrl, routeName, children }) => {\r\n  const [{ records, status, error }, dispatch] = useReducer(requestReducer, {\r\n    status: REQUEST_STATUS.LOADING,\r\n    records: [],\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseUrl}/${routeName}`);\r\n        dispatch({\r\n          type: GET_ALL_SUCCESS,\r\n          records: response.data,\r\n        });\r\n      } catch (e) {\r\n        console.log(\"Loading data error\", e);\r\n        dispatch({\r\n          type: GET_ALL_FAILURE,\r\n          error: e,\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [baseUrl, routeName]);\r\n\r\n  const childProps = {\r\n    records,\r\n    status,\r\n    error,\r\n    put: async (record) => {\r\n      dispatch({\r\n        type: \"PUT\",\r\n      });\r\n      try {\r\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\r\n        dispatch({\r\n          type: PUT_SUCCESS,\r\n          record,\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: PUT_FAILURE,\r\n          error: e,\r\n        });\r\n      }\r\n    },\r\n  };\r\n\r\n  return children(childProps);\r\n};\r\n\r\nexport default Request;\r\n"]},"metadata":{},"sourceType":"module"}