{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"J:\\\\react-search-designed-component\\\\src\\\\components\\\\Speakers\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"../SearchBar\"; // import speakersData from \"./data.js\";\n\nimport SingleSpeaker from \"./singleSpeaker\";\nimport axios from \"axios\";\n\nconst Speakers = () => {\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    ERROR: \"error\"\n  };\n  const [searchQuery, setSearchQuery] = useReducer(\"\");\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"GET_ALL_SUCCESS\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          speakers: action.speakers\n        });\n\n      case \"UPDATE_STATUS\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: action.status\n        });\n    }\n  };\n\n  const [{\n    speakers,\n    status\n  }, dispatch] = useReducer(reducer, {\n    status: REQUEST_STATUS.ERROR,\n    type: \"UPDATE_STATUS\"\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/speakers\");\n        dispatch({\n          speakers: response.data,\n          type: \"GET_ALL_SUCCESS\"\n        });\n        dispatch({\n          status: REQUEST_STATUS.SUCCESS,\n          type: \"UPDATE_STATUS\"\n        });\n      } catch (e) {\n        dispatch({\n          status: REQUEST_STATUS.ERROR,\n          type: \"UPDATE_STATUS\"\n        });\n        setError(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const success = status === REQUEST_STATUS.SUCCESS;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  const isError = status === REQUEST_STATUS.ERROR;\n  const mapSpeakers = speakers.filter(record => {\n    const targetString = `${record.lastName} ${record.firstName}`.toLowerCase();\n    return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n  }).map(single => {\n    return /*#__PURE__*/_jsxDEV(SingleSpeaker, _objectSpread(_objectSpread({}, single), {}, {\n      toggleButton: () => toggleButtonHandler(single)\n    }), single.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  });\n\n  const toggleFavoriteStatus = speakerRecord => {\n    return _objectSpread(_objectSpread({}, speakerRecord), {}, {\n      isFavorite: !speakerRecord.isFavorite\n    });\n  };\n\n  const toggleButtonHandler = async speakerRecord => {\n    const toggledSpeakerRecord = toggleFavoriteStatus(speakerRecord);\n    const speakerIndex = speakers.map(single => single.id).indexOf(speakerRecord.id);\n\n    try {\n      await axios.put(`http://localhost:4000/speakers/${speakerRecord.id}`, toggledSpeakerRecord);\n      setSpeakers([...speakers.slice(0, speakerIndex), toggledSpeakerRecord, ...speakers.slice(speakerIndex + 1)]);\n    } catch (e) {\n      dispatch({\n        status: REQUEST_STATUS.ERROR,\n        type: \"UPDATE_STATUS\"\n      });\n      setError(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading error... Is the json-server up and running? (try \\\"npm run json-server\\\" at your terminal) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"ERROR: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: mapSpeakers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["J:/react-search-designed-component/src/components/Speakers/index.js"],"names":["React","useState","useEffect","SearchBar","SingleSpeaker","axios","Speakers","REQUEST_STATUS","LOADING","SUCCESS","ERROR","searchQuery","setSearchQuery","useReducer","reducer","state","action","type","speakers","status","dispatch","error","setError","fetchData","response","get","data","e","success","isLoading","isError","mapSpeakers","filter","record","targetString","lastName","firstName","toLowerCase","length","includes","map","single","toggleButtonHandler","id","toggleFavoriteStatus","speakerRecord","isFavorite","toggledSpeakerRecord","speakerIndex","indexOf","put","setSpeakers","slice","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"../SearchBar\";\r\n// import speakersData from \"./data.js\";\r\nimport SingleSpeaker from \"./singleSpeaker\";\r\nimport axios from \"axios\";\r\n\r\nconst Speakers = () => {\r\n  const REQUEST_STATUS = {\r\n    LOADING: \"loading\",\r\n    SUCCESS: \"success\",\r\n    ERROR: \"error\",\r\n  };\r\n  const [searchQuery, setSearchQuery] = useReducer(\"\");\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"GET_ALL_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          speakers: action.speakers,\r\n        };\r\n      case \"UPDATE_STATUS\":\r\n        return {\r\n          ...state,\r\n          status: action.status,\r\n        };\r\n    }\r\n  };\r\n  const [{ speakers, status }, dispatch] = useReducer(reducer, {\r\n    status: REQUEST_STATUS.ERROR,\r\n    type: \"UPDATE_STATUS\",\r\n  });\r\n  const [error, setError] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:4000/speakers\");\r\n        dispatch({\r\n          speakers: response.data,\r\n          type: \"GET_ALL_SUCCESS\",\r\n        });\r\n        dispatch({\r\n          status: REQUEST_STATUS.SUCCESS,\r\n          type: \"UPDATE_STATUS\",\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          status: REQUEST_STATUS.ERROR,\r\n          type: \"UPDATE_STATUS\",\r\n        });\r\n        setError(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const success = status === REQUEST_STATUS.SUCCESS;\r\n  const isLoading = status === REQUEST_STATUS.LOADING;\r\n  const isError = status === REQUEST_STATUS.ERROR;\r\n\r\n  const mapSpeakers = speakers\r\n    .filter((record) => {\r\n      const targetString = `${record.lastName} ${record.firstName}`.toLowerCase();\r\n      return searchQuery.length === 0\r\n        ? true\r\n        : targetString.includes(searchQuery.toLowerCase());\r\n    })\r\n    .map((single) => {\r\n      return (\r\n        <SingleSpeaker\r\n          key={single.id}\r\n          {...single}\r\n          toggleButton={() => toggleButtonHandler(single)}\r\n        />\r\n      );\r\n    });\r\n\r\n  const toggleFavoriteStatus = (speakerRecord) => {\r\n    return {\r\n      ...speakerRecord,\r\n      isFavorite: !speakerRecord.isFavorite,\r\n    };\r\n  };\r\n\r\n  const toggleButtonHandler = async (speakerRecord) => {\r\n    const toggledSpeakerRecord = toggleFavoriteStatus(speakerRecord);\r\n    const speakerIndex = speakers\r\n      .map((single) => single.id)\r\n      .indexOf(speakerRecord.id);\r\n\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:4000/speakers/${speakerRecord.id}`,\r\n        toggledSpeakerRecord\r\n      );\r\n      setSpeakers([\r\n        ...speakers.slice(0, speakerIndex),\r\n        toggledSpeakerRecord,\r\n        ...speakers.slice(speakerIndex + 1),\r\n      ]);\r\n    } catch (e) {\r\n      dispatch({\r\n        status: REQUEST_STATUS.ERROR,\r\n        type: \"UPDATE_STATUS\",\r\n      });\r\n      setError(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      {isLoading && <div>Loading...</div>}\r\n      {/* error handling */}\r\n      {isError && (\r\n        <div>\r\n          Loading error... Is the json-server up and running? (try \"npm run\r\n          json-server\" at your terminal) <br />\r\n          <b>ERROR: {error.message}</b>\r\n        </div>\r\n      )}\r\n      {success && (\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\r\n          {mapSpeakers}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}